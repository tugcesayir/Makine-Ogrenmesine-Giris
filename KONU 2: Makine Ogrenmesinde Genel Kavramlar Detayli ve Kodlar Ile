Veri öğrenimi, makine öğrenmesi ve veri bilimi alanlarında kullanılan yöntem ve tekniklerin genel adıdır.
Veri öğreniminin başlıca üç türü vardır: denetimli öğrenme, denetimsiz öğrenme ve pekiştirmeli öğrenme. Her biri farklı türde veri ve problemler için kullanılır.
1. Denetimli Öğrenme (Supervised Learning)

Denetimli öğrenme, giriş ve çıkış verilerinin olduğu etiketlenmiş veri setleri üzerinde çalışır. 
Model, giriş verileri ile doğru çıkışlar arasındaki ilişkiyi öğrenir ve yeni verilere uygulamak üzere genel bir fonksiyon oluşturur.
Türleri:

    Sınıflandırma (Classification): Verileri kategorilere ayırır.
        Örnek: E-postaların spam veya spam olmayan olarak sınıflandırılması.
    Regresyon (Regression): Sürekli bir çıktı değeri tahmin eder.
        Örnek: Bir evin fiyatının tahmin edilmesi.

Örnek Kod: Python'da Scikit-Learn kullanarak sınıflandırma

from sklearn.datasets import load_iris
from sklearn.model_selection import train_test_split
from sklearn.ensemble import RandomForestClassifier
from sklearn.metrics import accuracy_score

# Veri setini yükle
iris = load_iris()
X = iris.data
y = iris.target

# Veriyi eğitim ve test olarak böl
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.3, random_state=42)

# Modeli oluştur ve eğit
clf = RandomForestClassifier(n_estimators=100)
clf.fit(X_train, y_train)

# Test verileri üzerinde tahmin yap
y_pred = clf.predict(X_test)

# Doğruluğu ölç
accuracy = accuracy_score(y_test, y_pred)
print(f"Accuracy: {accuracy:.2f}")


2. Denetimsiz Öğrenme (Unsupervised Learning)

Denetimsiz öğrenme, etiketlenmemiş veri üzerinde çalışır ve veri içindeki gizli kalıpları veya yapıları keşfetmeye çalışır. 
Veriler arasındaki ilişkileri anlamak veya veriyi belirli gruplara ayırmak için kullanılır.
Türleri:

    Kümeleme (Clustering): Benzer verileri gruplar.
        Örnek: Müşterileri benzer alışveriş alışkanlıklarına göre segmentlere ayırmak.
    Boyut İndirgeme (Dimensionality Reduction): Veriyi daha düşük boyutlu bir uzaya projeler.
        Örnek: Görsel veri setlerinde boyut azaltma.


import numpy as np
import matplotlib.pyplot as plt
from sklearn.datasets import load_iris
from sklearn.cluster import KMeans

# Veri setini yükle
iris = load_iris()
X = iris.data

# Modeli oluştur ve eğit
kmeans = KMeans(n_clusters=3, random_state=42)
kmeans.fit(X)

# Küme etiketlerini al
labels = kmeans.labels_

# Sonuçları görselleştir
plt.scatter(X[:, 0], X[:, 1], c=labels, cmap='viridis')
plt.xlabel('Sepal length')
plt.ylabel('Sepal width')
plt.title('KMeans Clustering of Iris Dataset')
plt.show()


3. Pekiştirmeli Öğrenme (Reinforcement Learning)

Pekiştirmeli öğrenme, bir ajanın belirli bir ortamda deneyim yoluyla nasıl hareket edeceğini öğrenmesi üzerine kuruludur. 
Ajan, ödül (reward) veya ceza (penalty) alarak, gelecekteki hareketlerini en iyi şekilde yönlendirecek bir strateji geliştirir.
Türleri:

    Q-Learning: Durum-eylem çiftleri için ödülleri depolar ve en iyi eylemi seçmek için bu ödülleri kullanır.


Örnek: Bir robotun labirentten çıkış yolunu bulması.

Python'da Q-Learning kullanarak basit bir oyun

import numpy as np

# Parametreler
gamma = 0.9  # İndirim oranı
alpha = 0.1  # Öğrenme oranı
epsilon = 0.1  # Epsilon-greedy politika için keşif oranı
num_states = 6
num_actions = 2

# Q-Tablosu
Q = np.zeros((num_states, num_actions))

# Ödül tablosu (örnek senaryo)
R = np.array([
    [-1, 0],
    [-1, 0],
    [-1, 0],
    [-1, 0],
    [-1, 100],
    [0, 0]
])

# Eğitim döngüsü
for episode in range(1000):
    state = np.random.randint(0, num_states - 1)
    while state != num_states - 1:
        if np.random.uniform(0, 1) < epsilon:
            action = np.random.randint(0, num_actions)
        else:
            action = np.argmax(Q[state, :])
        next_state = state + 1 if action == 1 else state
        reward = R[state, action]
        Q[state, action] = Q[state, action] + alpha * (reward + gamma * np.max(Q[next_state, :]) - Q[state, action])
        state = next_state

# Öğrenilen Q-tablosunu yazdır
print("Learned Q-Table:")
print(Q)


